#!/bin/echo docker build . -f
# -*- coding: utf-8 -*-

FROM debian:11-slim AS build
WORKDIR /src

ENV DEBIAN_FRONTEND noninteractive

RUN echo "# log: Base Image" \
    && apt-get update \
    && apt-get dist-upgrade -y

RUN echo "# log: Install base requirements" \
    && apt-get install -y git

RUN echo "# log: Install: Trusted Firmware A build requirements" \
    && apt-get install -y build-essential gcc-aarch64-linux-gnu

RUN echo "# log: Install: OP-TEE build requirements" \
    && apt-get install -y build-essential gcc-aarch64-linux-gnu gcc-arm-linux-gnueabihf python3-cryptography python3-minimal python3-pyelftools

RUN echo "# log: Install: U-Boot build requirements" \
    && apt-get install -y bison build-essential flex gcc-aarch64-linux-gnu gcc-arm-linux-gnueabihf libgnutls28-dev libssl-dev python3-dev python3-jsonschema python3-setuptools python3-yaml swig yamllint

RUN echo "Clone: TI Linux Firmware" \
    && git clone -b 11.00.08 https://github.com/beagleboard/ti-linux-firmware.git --depth=1

RUN echo "Clone: Trusted Firmware A" \
    && git clone -b lts-v2.12 https://github.com/TrustedFirmware-A/trusted-firmware-a.git --depth=1

RUN echo "Clone: OP-TEE" \
    && git clone -b 4.5.0 https://github.com/OP-TEE/optee_os.git --depth=1

RUN echo "Clone: U-Boot" \
    && git clone -b v2025.04-rc5-pocketbeagle2 https://github.com/beagleboard/u-boot.git --depth=1

RUN echo "Build: Trusted Firmware A" \
    && make -C ./trusted-firmware-a/ -j4 CROSS_COMPILE=aarch64-linux-gnu- PLAT=k3 ARCH=aarch64 SPD=opteed TARGET_BOARD=lite K3_USART=0x6 all

RUN echo "Build: OP-TEE" \
    && make -C ./optee_os/ -j4 CROSS_COMPILE=arm-linux-gnueabihf- CROSS_COMPILE64=aarch64-linux-gnu- CFG_ARM64_core=y PLATFORM=k3-am62x CFG_WITH_SOFTWARE_PRNG=y CFG_CONSOLE_UART=0x6 all

RUN echo "Build: U-Boot CORTEXR" \
    && make -C ./u-boot/ O=../CORTEXR CROSS_COMPILE=arm-linux-gnueabihf- am6232_pocketbeagle2_r5_defconfig \
    && make -C ./u-boot/ -j4 O=../CORTEXR CROSS_COMPILE=arm-linux-gnueabihf- BINMAN_INDIRS=/src/ti-linux-firmware/

RUN echo "Build: U-Boot CORTEXA" \
    && make -C ./u-boot/ O=../CORTEXA CROSS_COMPILE=aarch64-linux-gnu- am6232_pocketbeagle2_a53_defconfig \
    && make -C ./u-boot/ -j4 O=../CORTEXA CROSS_COMPILE=aarch64-linux-gnu- BL31=/src/trusted-firmware-a/build/k3/lite/release/bl31.bin TEE=/src/optee_os/out/arm-plat-k3/core/tee-pager_v2.bin BINMAN_INDIRS=/src/ti-linux-firmware/

FROM scratch
COPY --from=build /src/trusted-firmware-a/build/k3/lite/release/bl31.bin /
COPY --from=build /src/optee_os/out/arm-plat-k3/core/tee-pager_v2.bin /
COPY --from=build /src/CORTEXR/tiboot3-am62x-hs-fs-evm.bin /
COPY --from=build /src/CORTEXA/tispl.bin /
COPY --from=build /src/CORTEXA/u-boot.img /
ENTRYPOINT ["input"]
